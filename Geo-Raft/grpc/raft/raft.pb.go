// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package raft

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type RequestVoteArgs struct {
	// TODO.....
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteArgs) Reset()         { *m = RequestVoteArgs{} }
func (m *RequestVoteArgs) String() string { return proto.CompactTextString(m) }
func (*RequestVoteArgs) ProtoMessage()    {}
func (*RequestVoteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *RequestVoteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteArgs.Unmarshal(m, b)
}
func (m *RequestVoteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteArgs.Marshal(b, m, deterministic)
}
func (m *RequestVoteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteArgs.Merge(m, src)
}
func (m *RequestVoteArgs) XXX_Size() int {
	return xxx_messageInfo_RequestVoteArgs.Size(m)
}
func (m *RequestVoteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteArgs proto.InternalMessageInfo

func (m *RequestVoteArgs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type RequestVoteReply struct {
	// TODO.....
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteReply) Reset()         { *m = RequestVoteReply{} }
func (m *RequestVoteReply) String() string { return proto.CompactTextString(m) }
func (*RequestVoteReply) ProtoMessage()    {}
func (*RequestVoteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *RequestVoteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteReply.Unmarshal(m, b)
}
func (m *RequestVoteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteReply.Marshal(b, m, deterministic)
}
func (m *RequestVoteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteReply.Merge(m, src)
}
func (m *RequestVoteReply) XXX_Size() int {
	return xxx_messageInfo_RequestVoteReply.Size(m)
}
func (m *RequestVoteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteReply.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteReply proto.InternalMessageInfo

func (m *RequestVoteReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AppendEntriesArgs struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesArgs) Reset()         { *m = AppendEntriesArgs{} }
func (m *AppendEntriesArgs) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesArgs) ProtoMessage()    {}
func (*AppendEntriesArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *AppendEntriesArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesArgs.Unmarshal(m, b)
}
func (m *AppendEntriesArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesArgs.Marshal(b, m, deterministic)
}
func (m *AppendEntriesArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesArgs.Merge(m, src)
}
func (m *AppendEntriesArgs) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesArgs.Size(m)
}
func (m *AppendEntriesArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesArgs.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesArgs proto.InternalMessageInfo

func (m *AppendEntriesArgs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AppendEntriesReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesReply) Reset()         { *m = AppendEntriesReply{} }
func (m *AppendEntriesReply) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesReply) ProtoMessage()    {}
func (*AppendEntriesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *AppendEntriesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesReply.Unmarshal(m, b)
}
func (m *AppendEntriesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesReply.Marshal(b, m, deterministic)
}
func (m *AppendEntriesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesReply.Merge(m, src)
}
func (m *AppendEntriesReply) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesReply.Size(m)
}
func (m *AppendEntriesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesReply.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesReply proto.InternalMessageInfo

func (m *AppendEntriesReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestVoteArgs)(nil), "RequestVoteArgs")
	proto.RegisterType((*RequestVoteReply)(nil), "RequestVoteReply")
	proto.RegisterType((*AppendEntriesArgs)(nil), "AppendEntriesArgs")
	proto.RegisterType((*AppendEntriesReply)(nil), "AppendEntriesReply")
}

func init() {
	proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b)
}

var fileDescriptor_b042552c306ae59b = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x4a, 0x4c, 0x2b,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe5, 0xe2, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x09, 0xcb, 0x2f, 0x49, 0x75, 0x2c, 0x4a, 0x2f, 0x16, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc,
	0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x74, 0xb8, 0x04, 0x90, 0x94,
	0x05, 0xa5, 0x16, 0xe4, 0x54, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xc3,
	0x94, 0xc2, 0xb8, 0x4a, 0xea, 0x5c, 0x82, 0x8e, 0x05, 0x05, 0xa9, 0x79, 0x29, 0xae, 0x79, 0x25,
	0x45, 0x99, 0xa9, 0xc5, 0x38, 0x8d, 0xd5, 0xe3, 0x12, 0x42, 0x51, 0x48, 0xc0, 0x60, 0xa3, 0x0a,
	0x2e, 0x96, 0x20, 0x47, 0xb7, 0x10, 0x21, 0x13, 0x2e, 0x6e, 0x24, 0xe7, 0x08, 0x09, 0xe8, 0xa1,
	0xf9, 0x41, 0x4a, 0x50, 0x0f, 0xdd, 0xb9, 0x4a, 0x0c, 0x42, 0x56, 0x5c, 0xbc, 0x28, 0xb6, 0x09,
	0x09, 0xe9, 0x61, 0x38, 0x53, 0x4a, 0x58, 0x0f, 0xd3, 0x45, 0x4a, 0x0c, 0x49, 0x6c, 0xe0, 0xe0,
	0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x22, 0xa3, 0x2d, 0xd0, 0x3c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RAFTClient is the client API for RAFT service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RAFTClient interface {
	// Sends a greeting
	RequestVote(ctx context.Context, in *RequestVoteArgs, opts ...grpc.CallOption) (*RequestVoteReply, error)
	AppendEntries(ctx context.Context, in *AppendEntriesArgs, opts ...grpc.CallOption) (*AppendEntriesReply, error)
}

type rAFTClient struct {
	cc grpc.ClientConnInterface
}

func NewRAFTClient(cc grpc.ClientConnInterface) RAFTClient {
	return &rAFTClient{cc}
}

func (c *rAFTClient) RequestVote(ctx context.Context, in *RequestVoteArgs, opts ...grpc.CallOption) (*RequestVoteReply, error) {
	out := new(RequestVoteReply)
	err := c.cc.Invoke(ctx, "/RAFT/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rAFTClient) AppendEntries(ctx context.Context, in *AppendEntriesArgs, opts ...grpc.CallOption) (*AppendEntriesReply, error) {
	out := new(AppendEntriesReply)
	err := c.cc.Invoke(ctx, "/RAFT/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RAFTServer is the server API for RAFT service.
type RAFTServer interface {
	// Sends a greeting
	RequestVote(context.Context, *RequestVoteArgs) (*RequestVoteReply, error)
	AppendEntries(context.Context, *AppendEntriesArgs) (*AppendEntriesReply, error)
}

// UnimplementedRAFTServer can be embedded to have forward compatible implementations.
type UnimplementedRAFTServer struct {
}

func (*UnimplementedRAFTServer) RequestVote(ctx context.Context, req *RequestVoteArgs) (*RequestVoteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}
func (*UnimplementedRAFTServer) AppendEntries(ctx context.Context, req *AppendEntriesArgs) (*AppendEntriesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}

func RegisterRAFTServer(s *grpc.Server, srv RAFTServer) {
	s.RegisterService(&_RAFT_serviceDesc, srv)
}

func _RAFT_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RAFTServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RAFT/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RAFTServer).RequestVote(ctx, req.(*RequestVoteArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _RAFT_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RAFTServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RAFT/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RAFTServer).AppendEntries(ctx, req.(*AppendEntriesArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _RAFT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RAFT",
	HandlerType: (*RAFTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestVote",
			Handler:    _RAFT_RequestVote_Handler,
		},
		{
			MethodName: "AppendEntries",
			Handler:    _RAFT_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}
